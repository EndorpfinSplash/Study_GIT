my fist small hooooome git
change on site


1) git init --bare origin
2) git clone --no-hardlinks origin dir1
3) git clone --no-hardlinks origin dir2
4) git add README.md


Я всегда мотивировал себя тем, что если постоянно не «упираться», то ничего в жизни и не добиться.
В последние годы, когда стали появляться некоторые достижения, я отчетливо понял, что, при наличии здоровья и удачи, 
успех прямо пропорционален вложенному труду или приложенным усилиям. 
Этим себя и мотивирую – провожу внутреннюю мобилизацию, так как знаю, что «побеждает тот, кто побеждает себя».
 При этом помню, что «только Вы сами можете себя мотивировать». «Мотивируйте себя всеми правдами и… неправдами».
 Когда Вам трудно, говорите себе: «Мы преодолеем», перефразируя слова известной песни борцов за гражданские права в США. 
Они многое преодолели. Неужели и Вы не сможете? 

git clone -- При выполнении git clone с сервера забирается (pulled) каждая версия каждого файла из истории проекта

В системах семейства Windows Git ищет файл .gitconfig в каталоге 
$HOME (C:\Documents and Settings$USER или C:\Users$USER для большинства пользователей).
git config --list --show-origin ---команда покажет где лежит конфиг файл


git rm -cached filename -- выводим файл из под версионного контроля git при этом файлы остаются на локальном диске
git rm -cached -r dir/  -- выводим катоалог (-r и рекурсивно его содержимое) из под версионного контроля git при этом файлы остаются на локальном диске
после этого нужно выполнить commit  и push изменений.

git fetch origin -- извлекает с удаленного хоста все наработки, отправленные другими (push) на этот сервер после того, как вы склонировали его (или получили изменения с помощью fetch).
git fetch - по умолчанию выполняет 

git pull  -- чтобы автоматически получить изменения из удалённой ветви(по умолчанию master) и слить(merge) их со своей текущей ветвью. Этот способ может для вас оказаться более простым или более удобным. 
К тому же по умолчанию команда git clone автоматически настраивает вашу локальную ветку master на отслеживание удалённой ветки master на сервере, с которого вы клонировали (подразумевается, что на удалённом сервере есть ветка master). 
Выполнение git pull, как правило, извлекает (fetch) данные с сервера, с которого вы изначально склонировали, и автоматически пытается слить (merge) их с кодом, над которым вы в данный момент работаете.

_______________________________________________________________________________
Reset (https://ru.hexlet.io/courses/intro_to_git/lessons/git-status/theory_unit)
Что делать если мы хотим вывести из-под индекса (staged area) файл? 
Для этого нам помогут две команды: reset и checkout.

git reset path/to/file переводит файл из состояния staged в modified
git checkout path/to/file переводит файл из состояния modified в unmodified, то есть по сути эта команда сбрасывает изменения.
_______________________________________________________________________________

git remote -v  -- просмотр ссылки на ресурс с хранилищем кода ()

# Тоже самое через чтение конфига
cat .git/config

http://learngitbranching.js.org/

 ORIGIN - название по умолянию для отдаленного репозитория после клонирования clone







++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

/**
 * Created by Djokerovich on 15.05.2018.
 */
public class Sorter {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new FileReader("input.txt"));
        reader.close();
        String line;
        ArrayList<String> list = new ArrayList<>(); // Alt + enter
        while ((line = reader.readLine()) != null) {// 2x(Ctrl+Shift+Enter) - autocompletion
            list.add(line);
        }
        reader.close();
        String[] array = list.toArray(new String[list.size()]);
        
    }
}


/*

Shift + Enter   =  compleate statement and jump out of brackets
        Ctrl + Shift + Enter   =  compleate line - put ; at the end.

        Shift + esc     =   hide project structure = Alt + 1 = unHide
        ctrl + j        = suitable shortcut list
        St -> String
        Ctrl + space    = autocompletion
        Ctrl + Shift + space = smart autocompletion

        reader.close = re.cl -> любой метод экземпляра класса можно вывзвать через сокращенное обращение по имени переменной
        экземпляра и сокращенному имени метода.(начало имени переменной + начало имени метода)

        Alt + Enter     = Resolve red lamps hints

        2x(Ctrl+Shift+Enter) - autocompletion
        Ctrl + Alt + v = extract var
        Ctrl + Alt + m = extract method

        Ctrl + Alt + n = inline variable (27:55)
*/

